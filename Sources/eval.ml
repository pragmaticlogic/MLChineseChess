module Eval

open Board
open Defines

let Bonous() =
(
	let s = ref 0 in
	let bn = [| [|-2; -3; -3; -4; -4; -5; 0 |];
				[|-2; -3; -3; -4; -4; -5; 0 |] |] in
	for i=0 to 1 do
		if (m_materialnumber.[i].[BISHOP] < 2) then
		(
			bn.[1-i].[ROOK] <- bn.[1-i].[ROOK] + 4;
			bn.[1-i].[KNIGHT] <- bn.[1-i].[KNIGHT] + 2;
			bn.[1-i].[PAWN] <- bn.[1-i].[PAWN] + 1;
		);
		if (m_materialnumber.[i].[ELEPHAN] < 2) then
		(
			bn.[1-i].[ROOK] <- bn.[1-i].[ROOK] + 2;
			bn.[1-i].[CANNON] <- bn.[1-i].[CANNON] + 2;
			bn.[1-i].[PAWN] <- bn.[1-i].[PAWN] + 1;
		)
	done;

	if (m_color.[0]=DARK && m_color.[1]=DARK && 
		m_piece.[0]=ROOK && m_piece.[1]=KNIGHT) then
		bn.[DARK].[6] <- bn.[DARK].[6] - 10;
	if (m_color.[7]=DARK && m_color.[8]=DARK && 
		m_piece.[8]=ROOK && m_piece.[7]=KNIGHT) then
		bn.[DARK].[6] <- bn.[DARK].[6] - 10;
	if (m_color.[81]=LIGHT && m_color.[82]=LIGHT && 
		m_piece.[81]=ROOK && m_piece.[82]=KNIGHT) then
		bn.[LIGHT].[6] <- bn.[LIGHT].[6] - 10;
	if (m_color.[88]=LIGHT && m_color.[89]=LIGHT && 
		m_piece.[89]=ROOK && m_piece.[88]=KNIGHT) then
		bn.[LIGHT].[6] <- bn.[LIGHT].[6] - 10;

	s := bn.[!m_side].[6] - bn.[!m_xside].[6];

	for i=0 to 5 do
		s := !s + (m_materialnumber.[!m_side].[i] * bn.[!m_side].[i]) - 
			(m_materialnumber.[!m_xside].[i] * bn.[!m_xside].[i]);
	done;
	!s
)

let pointtable =
	 [|[|[|
		0;  0;  0;  0;  0;  0;  0;  0;  0; 			
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		10;  0; 12;  0; 15;  0; 12;  0; 10;
		10;  0; 13;  0; 10;  0; 13;  0; 10;
		20; 20; 20; 20; 20; 20; 20; 20; 20;
		20; 21; 21; 22; 22; 22; 21; 21; 20;
		20; 21; 21; 23; 23; 23; 21; 21; 20;
		20; 21; 21; 23; 22; 23; 21; 21; 20;
		11; 12; 13; 14; 14; 14; 13; 12; 11|];
	  [|
		11; 12; 13; 14; 14; 14; 13; 12; 11;          
		20; 21; 21; 23; 22; 23; 21; 21; 20;
		20; 21; 21; 23; 23; 23; 21; 21; 20;
		20; 21; 21; 22; 22; 22; 21; 21; 20;
		20; 20; 20; 20; 20; 20; 20; 20; 20;
		10;  0; 13;  0; 10;  0; 13;  0; 10;
		10;  0; 12;  0; 15;  0; 12;  0; 10;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0|]|];
	  [|[|
		0;  0;  0; 20;  0; 20;  0;  0;  0; 			
		0;  0;  0;  0; 22;  0;  0;  0;  0;
		0;  0;  0; 19;  0; 19;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0|];
	   [|
		0;  0;  0;  0;  0;  0;  0;  0;  0;          
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0; 19;  0; 19;  0;  0;  0;
		0;  0;  0;  0; 22;  0;  0;  0;  0;
		0;  0;  0; 20;  0; 20;  0;  0;  0|]|];
	  [|[|
		0;  0; 25;  0;  0;  0; 25;  0;  0; 			
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		23;  0;  0;  0; 28;  0;  0;  0; 23;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0; 22;  0;  0;  0; 22;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0|];
	   [|
		0;  0;  0;  0;  0;  0;  0;  0;  0;          
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0; 22;  0;  0;  0; 22;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
	   23;  0;  0;  0; 28;  0;  0;  0; 23;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0; 25;  0;  0;  0; 25;  0;  0|]|];
	  [|[|
		40; 35; 40; 40; 40; 40; 40; 35; 40; 		
		40; 41; 42; 40; 20; 40; 42; 41; 40;
		40; 42; 43; 40; 40; 40; 43; 42; 40;
		40; 42; 43; 43; 43; 43; 43; 42; 40;
		40; 43; 44; 44; 44; 44; 44; 43; 40;
		40; 43; 44; 44; 44; 44; 44; 43; 40;
		40; 43; 44; 44; 44; 44; 44; 43; 40;
		40; 43; 44; 44; 44; 44; 44; 43; 40;
		40; 41; 42; 42; 42; 42; 42; 41; 40;
		40; 40; 40; 40; 40; 40; 40; 40; 40|];
	   [|
		40; 40; 40; 40; 40; 40; 40; 40; 40; 		
		40; 41; 42; 42; 42; 42; 42; 41; 40;
		40; 43; 44; 44; 44; 44; 44; 43; 40;
		40; 43; 44; 44; 44; 44; 44; 43; 40;
		40; 43; 44; 44; 44; 44; 44; 43; 40;
		40; 43; 44; 44; 44; 44; 44; 43; 40;
		40; 42; 43; 43; 43; 43; 43; 42; 40;
		40; 42; 43; 40; 40; 40; 43; 42; 40;
		40; 41; 42; 40; 20; 40; 42; 41; 40;
		40; 35; 40; 40; 40; 40; 40; 35; 40|]|];
	  [|[|
		50; 50; 50; 50; 50; 50; 50; 50; 50; 		
		50; 50; 50; 50; 50; 50; 50; 50; 50;
		50; 51; 53; 53; 55; 53; 53; 51; 50;
		50; 51; 50; 50; 50; 50; 50; 51; 50;
		50; 51; 51; 51; 51; 51; 51; 51; 50;
		50; 51; 50; 50; 50; 50; 50; 51; 50;
		50; 51; 50; 50; 50; 50; 50; 51; 50;
		50; 51; 50; 50; 50; 50; 50; 51; 50;
		50; 51; 50; 50; 50; 50; 50; 51; 50;
		50; 50; 50; 50; 50; 50; 50; 50; 50|];
	   [|
		50; 50; 50; 50; 50; 50; 50; 50; 50; 		
		50; 51; 50; 50; 50; 50; 50; 51; 50;
		50; 51; 50; 50; 50; 50; 50; 51; 50;
		50; 51; 50; 50; 50; 50; 50; 51; 50;
		50; 51; 50; 50; 50; 50; 50; 51; 50;
		50; 51; 51; 51; 51; 51; 51; 51; 50;
		50; 51; 50; 50; 50; 50; 50; 51; 50;
		50; 51; 53; 53; 55; 53; 53; 51; 50;
		50; 50; 50; 50; 50; 50; 50; 50; 50;
		50; 50; 50; 50; 50; 50; 50; 50; 50|]|];
	  [|[|
		89; 92; 90; 90; 90; 90; 90; 92; 89; 		
		91; 92; 90; 93; 90; 93; 90; 92; 91;
		90; 92; 90; 91; 90; 91; 90; 92; 90;
		90; 91; 90; 91; 90; 91; 90; 91; 90;
		90; 94; 90; 94; 90; 94; 90; 94; 90;
		90; 93; 90; 91; 90; 91; 90; 93; 90;
		90; 91; 90; 91; 90; 91; 90; 91; 90;
		90; 91; 90; 90; 90; 90; 90; 91; 90;
		90; 92; 91; 91; 90; 91; 91; 92; 90;
		90; 90; 90; 90; 90; 90; 90; 90; 90|];
	   [|
		90; 90; 90; 90; 90; 90; 90; 90; 90; 		
		90; 92; 91; 91; 90; 91; 91; 92; 90;
		90; 91; 90; 90; 90; 90; 90; 91; 90;
		90; 91; 90; 91; 90; 91; 90; 91; 90;
		90; 93; 90; 91; 90; 91; 90; 93; 90;
		90; 94; 90; 94; 90; 94; 90; 94; 90;
		90; 91; 90; 91; 90; 91; 90; 91; 90;
		90; 92; 90; 91; 90; 91; 90; 92; 90;
		91; 92; 90; 93; 90; 93; 90; 92; 91;
		89; 92; 90; 90; 90; 90; 90; 92; 89|]|];
	  [|[|
		0;  0;  0; 30; 35; 30;  0;  0;  0; 			
		0;  0;  0; 15; 15; 15;  0;  0;  0;
		0;  0;  0;  1;  1;  1;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0|];
		[|
		0;  0;  0;  0;  0;  0;  0;  0;  0;          
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  0;  0;  0;  0;  0;  0;
		0;  0;  0;  1;  1;  1;  0;  0;  0;
		0;  0;  0; 15; 15; 15;  0;  0;  0;
		0;  0;  0; 30; 35; 30;  0;  0;  0|]|]|]
        
let Evalu() = 
let  s = ref 0 in
for i=0 to  89 do
	if (m_color.[i] = DARK) then 
		 s := !s + pointtable.[m_piece.[i]].[DARK].[i]
	else 
		if (m_color.[i] = LIGHT)then 
			s := !s - pointtable.[m_piece.[i]].[LIGHT].[i]
done;
if (!m_side = LIGHT) then s := -(!s); 
s := !s + Bonous();
!s 
